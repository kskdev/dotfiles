# このファイルを .tmux.conf としてホームディレクトリに置くと設定が反映される
# おすすめはシンボリックリンクを貼ること

# ----------------------------------------------------
# Basic setting
# ----------------------------------------------------

# プレフィックスキー(様々なtmuxコマンドを実行するための修飾キー)
# C-b : Ctrl+b
set -g prefix C-b

# キーバインドの解除
# unbind C-b

# decrease delay key stroke TODO 0にしないほうが良いらしい...要調査
set -s escape-time 1

# ウィンドウIDのインデックススタート番号
set -g base-index 0

# start pane index from 0
setw -g pane-base-index 0

# 記録する行数
set-option -g history-limit 10000

# デフォルトで使用するシェルをtmux起動時のシェルを使用
set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"

# xtermの設定の有効化
# TODO ここの設定が曖昧.何故設定しているかを説明出来るように.
set -ga terminal-overrides ',xterm-256color:Tc'
set -g default-terminal "screen-256color"
set -g terminal-overrides "xterm:colors=256"
set-option -g xterm-keys on


# ----------------------------------------------------
# Key mapping
# ----------------------------------------------------

# prefix -> r : tmux.conf を再読み込みして設定をリロード
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# prefix -> Ctrl+a : tmux中のプログラムにCtrl+aを送る
# TODO 意味不明
bind C-a send-prefix

# prefix -> [h or j or k or l] : ペインを移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# prefix -> [Ctrl+h or Ctrl+l] : 隣のウィンドウへ移動
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize pain by vim key bind
# prefix -> [H or J or K or L] : ペインのサイズを変更
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Ctrl+o : ペインをID順に順番に移動 (prefixキー不要)
bind -n C-o select-pane -t :.+

# prefix -> c : 新しいウィンドウを作成.作成時のディレクトリは直前にいたディレクトリ
bind c new-window -c "#{pane_current_path}"

# prefix -> | : 垂直方向にペインを分割
bind | split-window -hc "#{pane_current_path}"

# prefix -> - : 水平方向にペインを分割
bind - split-window -vc "#{pane_current_path}"

# コピーモードをvi風の操作へ変更
# TODO tmuxのコピペの設定について記述した所に書くべき
set-window-option -g mode-keys vi


# ----------------------------------------------------
# Plugins by tpm
# ----------------------------------------------------
# tpm(tmux plugin manager) を用いたtmuxの最適化
# Install plugin : [tmux prefix] + I
# Update  plugin : [tmux prefix] + U
# プラグインリスト
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# バッテリー情報の取得(ステータスバーに表示)
set -g @plugin 'tmux-plugins/tmux-battery'

# 通信環境の取得(ステータスバーに表示)
set -g @plugin 'tmux-plugins/tmux-online-status'

# CPU情報の取得
set -g @plugin 'tmux-plugins/tmux-cpu'

# 再起動後にセッションを復活
# prefix -> Ctrl+s : セッション環境をセーブ
# prefix -> Ctrl+r : セーブしたセッション環境を復元
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'

# システムのコピーアンドペーストを簡単化(各OSごとの requirement が異なるのでgithubのREADMEに従うこと)
set -g @plugin 'tmux-plugins/tmux-yank'

# マウスコピーの有効化(OSとかtmuxとかのverをよく確認すること. https://github.com/tmux-plugins/tmux-yank 参照に. )
set -g @yank_with_mouse on # 'on' or 'off'
set -g mouse off # マウススクロールやカーソルによるペイン調整などが可能になる(プラグインではない)

# vi モードのサポート
set -g @shell_mode 'vi'

# ステータスバー左側の表示設定
# set -g status-left "#[fg=${fg_basic1}]#{battery_icon}#{battery_percentage} %m/%d(%a) %H:%M #H Sess:#S jin:#I"
set -g status-left "[#H]#{battery_icon}#{battery_percentage} %m/%d %H:%M Ses:#S Win:#I"



# =====================================
# システムのクリップボードと連携してコピー・アンド・ペーストの有効化
# ref : https://qiita.com/Sho2010@github/items/0ff73d78dae6f6313c1c
# 動作確認 :
#   mac:           setting...
#   ubuntu(16.04): prefix+[ だけが上手く動かない.マウスのドラッグは有効
#   Windows:       Unsupported
# =====================================

# ==== for mac
# brew install reattach-to-user-namespace していないとtmuxを起動しようとすると[exited]になる.
# ref : https://qiita.com/kiyodori/items/12c7624e313c70e42459
if-shell "uname | grep -q Darwin" \
  'set-option -g default-command "reattach-to-user-namespace -l zsh"'
if-shell "uname | grep -q Darwin" \
  'bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'

# ==== for Linux (tmuxのbufferとxのclipboardを連携させる)
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -ib'"
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'xsel -ib'"
if-shell 'type xsel' \
  "bind ] run-shell \
    'xsel -ob | xargs -0 -I{} tmux set-buffer -- {} && tmux paste-buffer'"

# ==== for Windows (未設定...)
# if-shell "uname -a | grep Microsoft" '\



# ----------------------------------------------------
# Color setting
# ----------------------------------------------------
# カラーテーブルの参考コード
# for i in {0..255}; do printf "\x1b[38;5;${i}mcolor%-5i\x1b[0m" $i ; if ! (( ($i + 1 ) % 16 )); then echo ; fi ; done

# 設定フォーマットの違いについて [tmux2.9aにアップデートしたらマイグレーションが必要だった] で言及
# 一応 tmux v2.1 でもエラー無く動作している模様
# ref : https://qiita.com/ume3_/items/4cec8266db8253037ef1
# ---- v2.9a で許されない記法
# set -g status-fg ${fg_basic1}
# set -g status-bg ${bg_basic1}
# ---- 新フォーマット
# set-option -g status-style bg=${bg_basic1},fg=${fg_basic1},dim
# attributes : bright/dim/underscore/blink/reverse/hidden/italics

# Colorscheme
pane_bg='colour234'  # Alacrittyの設定値(背景)と合わせる
# molokai like
# bg_basic1='colour235'
# fg_basic1='colour253'
# fg_basic2='colour199'
# fg_basic3='colour118'
# orange on black
# bg_basic1='colour236'
# fg_basic1='colour223'
# fg_basic2='colour209'
# fg_basic3='colour205'
# iceberg like
# bg_basic1='colour237'
# fg_basic1='colour249'
# fg_basic2='colour117'
# fg_basic3='colour147'
# tender like
bg_basic1='colour235'
fg_basic1='colour195'
fg_basic2='colour214'
fg_basic3='colour148'
# Ubuntu on WSL
# bg_basic1='colour000'
# fg_basic1='colour038'
# fg_basic2='colour208'
# fg_basic3='colour180'

# ---------------------------------------
# Basic utatus uar setting.
# ---------------------------------------
# ステータスバーの基本色
set-option -g status-style bg=${bg_basic1},fg=${fg_basic1},dim

# ウィンドウタイトルの基本色
set-window-option -g window-status-style fg=${fg_basic1},bg=${bg_basic1},dim

# 非操作中のウィンドウでプロセスが走っているウィンドウタイトルの色
set-window-option -g window-status-activity-style fg=${fg_basic3},bg=${bg_basic1},dim

# 操作中のウィンドウタイトルの色
set-window-option -g window-status-current-style fg=${fg_basic2},bg=${bg_basic1},bright

# ---------------------------------------
# Basic pane setting.
# ---------------------------------------
# ペインボーダー(枠)の基本色
set-option -g pane-border-style fg=${fg_basic2},bg=default

# 操作中のペインボーダーの色
set-option -g pane-active-border-style fg=${fg_basic2},bg=default

# ペインの基本色
# set-option -g window-style fg=${fg_basic1},bg=default
set-option -g window-style fg=default,bg=default
# 操作中のペインの色
set-option -g window-active-style fg=default,bg=${pane_bg}

# tmuxメッセージの基本色
set-option -g message-style fg=${bg_basic1},bg=${fg_basic1}

# ----------------------------------------------------
# Status bar setting
# ----------------------------------------------------
# ステータスバーの表示をUTF-8に対応させる
# (ほぼいらないかも?)
setw -g utf8 on

# ステータスバーの位置(top/bottom)
set -g status-position top

# ステータス情報の更新間隔(sec)
set -g status-interval 1

# ウィンドウタイトルの表示フォーマット
setw -g window-status-format "#I:#W"
# カレントウィンドウタイトルの表示フォーマット
# setw -g window-status-current-format "#{pane_current_path}"
# setw -g window-status-current-format "#( basename `pwd` )"
# setw -g window-status-current-format "#(pwd | rev | grep --only-matching '^[a-zA-Z]*' | rev)"

# ウィンドウリストを中央寄せ表示
set -g status-justify centre

# ステータスのバー左側の最大表示文字数
set -g status-left-length 60

# ステータスのバー右側の最大表示文字数
# set -g status-right-length 60
# 表示内容のフォーマット:GPU使用率の表示(自作)
# set -g status-right "#[fg=${fg_basic1}]#(bash ~/gpuinfo_tmux.sh)"

# 通知の表示
setw -g monitor-activity on
setw -g visual-activity on


# プラグインの有効化(この処理は tmux.conf の最終行に書く必要がある)
run -b '~/.tmux/plugins/tpm/tpm'
